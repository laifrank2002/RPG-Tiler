#BlueJ class context
comment0.target=Map
comment0.text=\r\n\ map\ will\ create\ a\ 2d\ array\ that\ will\ store\ values\ as\ to\ what\ is\ contained\ there\r\n\ this\ physically\ represents\ a\ map\ in\ 2d\ space\r\n\ \r\n\ Code\ for\ tiles\r\n\ 0\ -\ null\r\n\ 1\ -\ nothing\r\n\ 2\ -\ forest\r\n\ 3\ -\ castle\r\n\ 4\ -\ lake\r\n\ 5\ -\ desert\r\n\ \r\n\ @author\ Frank\ Lai\r\n\ @version\ 2018-02-26\r\n
comment1.params=x_size\ y_size\ map_name
comment1.target=Map(int,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructs\ a\ Map\ object\ with\ all\ params\ defined\r\n\ \r\n\ @param\ x\ the\ length\ of\ the\ map\r\n\ @param\ y\ the\ width\ of\ the\ map\r\n\ @param\ name\ the\ name\ of\ the\ map\r\n
comment10.params=mapObject
comment10.target=void\ addMapObject(MapObject)
comment10.text=\r\n\ Adds\ new\ MapObject\ to\ the\ map\r\n
comment11.params=index
comment11.target=void\ removeMapObjectByIndex(int)
comment11.text=\r\n\ removes\ MapObject\ from\ the\ map\ by\ its\ index\r\n\ \r\n\ @param\ index\ the\ index\ of\ the\ object\r\n
comment12.params=serial
comment12.target=void\ removeMapObjectBySerial(int)
comment12.text=\r\n\ removes\ MapObject\ from\ the\ map\ by\ its\ serial\r\n\ \r\n\ @param\ serial\ the\ serialID\ of\ the\ object\r\n
comment13.params=mapObject
comment13.target=void\ removeMapObject(MapObject)
comment13.text=\r\n\ removes\ MapObject\ from\ the\ map\ by\ specifying\ the\ object\r\n\ \r\n\ @param\ mapObject\ the\ object\ wished\ the\ remove\r\n
comment14.params=min\ max
comment14.target=int\ randomRange(int,\ int)
comment14.text=\r\n\ returns\ random\ value\ within\ range\r\n\ \r\n\ @return\ a\ random\ number\r\n\ @param\ min\ the\ miniumum\r\n\ @param\ max\ the\ maximum\r\n
comment15.params=
comment15.target=int\ generateTile()
comment15.text=\r\n\ map\ generator\ that\ generates\ according\ to\ a\ set\ of\ predefined\ parameters\r\n
comment16.params=
comment16.target=void\ exportMapToFile()
comment16.text=\r\n\ Exports\ a\ map\ to\ a\ text\ file.\ Only\ exports\ tiles,\ not\ the\ things\ on\ it\!\r\n
comment17.params=fileName
comment17.target=void\ exportMapToFile(java.lang.String)
comment17.text=\r\n\ Exports\ a\ map\ to\ a\ text\ file\ that\ is\ named.\ Only\ exports\ tiles,\ not\ the\ things\ on\ it\!\r\n\ \r\n\ @param\ name\ the\ name\ of\ the\ file\r\n
comment2.params=x_size\ y_size
comment2.target=Map(int,\ int)
comment2.text=\r\n\ Constructs\ a\ Map\ object\ that\ defines\ the\ size\r\n\ \r\n\ @param\ x\ the\ length\ of\ the\ map\r\n\ @param\ y\ the\ width\ of\ the\ map;\r\n
comment3.params=
comment3.target=Map()
comment3.text=\r\n\ Constructs\ a\ map\ with\ default\ characteristics;\ programmer's\ lazy\ characteristics\r\n
comment4.params=x\ y
comment4.target=boolean\ isValidCoordinate(int,\ int)
comment4.text=\r\n\ returns\ whether\ or\ not\ a\ cartesian\ coordinate\ lies\ within\ the\ map\r\n\ \r\n\ @param\ x\ the\ x\ coordinate\r\n\ @param\ y\ the\ y\ coordinate\r\n
comment5.params=index
comment5.target=MapObject\ getMapObject(int)
comment5.text=\r\n\ returns\ a\ mapobject\ on\ the\ map\ (NOT\ ERROR\ PROOFED)\r\n\ \r\n\ @param\ index\ the\ index\ of\ the\ object\r\n\ \r\n\ @return\ the\ map\ object\r\n
comment6.params=x\ y
comment6.target=int\ getTileType(int,\ int)
comment6.text=\r\n\ returns\ the\ tile\ type\ only\ if\ the\ coordinate\ is\ valid\r\n\ \r\n\ @param\ x\ the\ x\ coordinate\r\n\ @param\ y\ the\ y\ coordinate\r\n\ \r\n\ @return\ the\ type\ of\ tile,\ -1\ is\ the\ error\ code\ \r\n
comment7.params=
comment7.target=int\ getXSize()
comment7.text=\r\n\ returns\ the\ length\ of\ the\ map\r\n
comment8.params=
comment8.target=int\ getYSize()
comment8.text=\r\n\ returns\ the\ width\ of\ the\ map\r\n
comment9.params=
comment9.target=java.lang.String\ getName()
comment9.text=\r\n\ returns\ the\ name\ of\ the\ map\r\n
numComments=18
